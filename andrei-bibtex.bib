% This file was created with JabRef 2.10.
% Encoding: Cp1252


@Book{nbr25000,
  Title                    = {NBR ISO/IEC 25000: engenharia de software - requisitos e avalia{\c{c}}{\~a}o da qualidade de produtos de software (SQuaRE) - Guia do SQuaRE.},
  Author                   = {ABNT},
  Year                     = {2008},
  Series                   = {Normas SQuaRE},

  ISBN                     = {9788507005971},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.28}
}

@Book{nbr9126,
  Title                    = {NBR ISO/IEC 9126-1: Engenharia de software - Qualidade de produto},
  Author                   = {ABNT},
  Year                     = {2003},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.28},
  Url                      = {http://www.abntcatalogo.com.br/norma.aspx?ID=2815}
}

@Article{Agarwal2014,
  Title                    = {{Quality assurance for Product development using Agile}},
  Author                   = {Agarwal, Anil and Garg, N K and Jain, Avirag},
  Journal                  = {2014 International Conference on Reliability Optimization and Information Technology (ICROIT)},
  Year                     = {2014},
  Pages                    = {44--47},

  Abstract                 = {Achieving the highest level of quality for the software product being delivered is the goal of any IT organization. Every organization wants to implement processes and practices that would help achieving this goal of increasing the quality of a software product. There are so many models available today that an organization can use for developing a software but considering the dynamics of today s world where technology is changing at a fast pace and innovative products are hitting the market at great speed, these organizations do not want a software development model that consume lot of time and efforts, and hence most of the business houses are moving towards Agile approach for software development. With this change in approach for software development, the big question is that how to ensure Quality of product developed using Agile model. The traditional approach has a separate phase for testing a software product which ensures that an independent team has validated the product per specified requirements. However, with Agile way of software development, this leverage of involvement of independent test teams and test levels has taken a back. This paper, will highlight broadly the role of QA within Agile development model, with focus on fresh thoughts and approaches to improve the overall quality of product developed using Agile methodology. The use and importance of Metrics for accessing the Quality within Agile model will also be discussed.},
  Doi                      = {10.1109/ICROIT.2014.6798281},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Agarwal, Garg, Jain/2014 International Conference on Reliability Optimization and Information Technology (ICROIT)/Agarwal, Garg, Jain - 2014 - Quality assurance for Product development using Agile.pdf:pdf},
  ISBN                     = {978-1-4799-2995-5},
  Url                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6798281$\backslash$nhttp://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6798281}
}

@Book{beizer1990,
  Title                    = {Software Testing Techniques},
  Author                   = {Boris Beizer},
  Publisher                = {International Thomson Computer Press},
  Year                     = {1990},

  ISBN                     = {9781850328803},
  Lccn                     = {89027639},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.15}
}

@Book{berander2005,
  Title                    = {Software quality attributes and trade-offs},
  Author                   = {Berander, Patrik and Damm, Lars-Ola and Eriksson, Jeanette and Gorschek, Tony and Henningsson, Kennet and J�nsson, Per and K�gstr�m, Simon and Milicic, Drazen and M�rtensson, Frans and R�nkk�, Kari and Tomaszewski, Piotr},
  Editor                   = {Lundberg, Lars and Mattsson, Michael and Wohlin, Claes},
  Publisher                = {Blekinge Institute of Technology},
  Year                     = {2005},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.21},
  Url                      = {https://www.bth.se/com/besq.nsf/pages/017bd879b7c9165dc12570680047aae2?OpenDocument}
}

@Article{Bhasin2012,
  Title                    = {{Quality assurance in agile: A study towards achieving excellence}},
  Author                   = {Bhasin, Sonali},
  Journal                  = {Proceedings - Agile India 2012, AgileIndia 2012},
  Year                     = {2012},
  Pages                    = {64--67},

  Abstract                 = {Agile Methods are known to have built-in quality management system, however there are still challenges seen in the real life scenarios within the software organizations that are transitioning from traditional method to Agile development methods. Traditional Quality Assurance techniques are reporting based and rely on heavy weight inspection methods whereas Agile Quality Assurance techniques are built-in daily activities by teams. Research proposal here aims to study various challenges faced in terms of assuring quality in Agile, what are the key drivers or indicators of Quality in agile and proposing the framework to evaluate what aspects of Agile improve the quality of the product in terms of bug rates, development time and costs. Through this study we aim to provide some suggestions to help organizations overcome obstacles expected in adopting the agile method as software development tool and ensuring quality.},
  Doi                      = {10.1109/AgileIndia.2012.18},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Bhasin/Proceedings - Agile India 2012, AgileIndia 2012/Bhasin - 2012 - Quality assurance in agile A study towards achieving excellence.pdf:pdf},
  ISBN                     = {9780769546575},
  Keywords                 = {agile,agile software development,quality,quality assurance (QA),scrum},
  Mendeley-tags            = {agile,quality,scrum}
}

@Book{BOEHM1978,
  Title                    = {Characteristics of software quality},
  Author                   = {Boehm, B.W.},
  Publisher                = {North-Holland Pub. Co.},
  Year                     = {1978},
  Series                   = {TRW series of software technology},

  Lccn                     = {78319591}
}

@InProceedings{Broek2014,
  Title                    = {{Integrating Testing into Agile Software Development Processes}},
  Author                   = {Broek, R Van Den and Bonsangue, M M and Chaudron, M and Merode, H Van},
  Booktitle                = {2014 2nd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
  Year                     = {2014},
  Pages                    = {561 -- 574},
  Publisher                = {IEEE},

  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Broek et al/2014 2nd International Conference on Model-Driven Engineering and Software Development (MODELSWARD)/Broek et al. - 2014 - Integrating Testing into Agile Software Development Processes.pdf:pdf},
  Keywords                 = {Agile Development,Agile Testing,Organizations,Planning,Product design,Quality assessment,Scrum,Software,Software Processes,Testing},
  Url                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=\&arnumber=7018519\&isnumber=7018411}
}

@Book{CHEMUTURI2011,
  Title                    = {{Mastering Software Quality Assurance: Best Practices, Tools and Techniques for Software Developers}},
  Author                   = {Chemuturi, Murali},
  Publisher                = {J. Ross},
  Year                     = {2011}
}

@Misc{alistair2010,
  Title                    = {Incremental versus iterative development},

  Author                   = {Alistair Cockburn},
  Year                     = {2010},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.11},
  Url                      = {http://alistair.cockburn.us/Incremental+versus+iterative+development},
  Urlaccessdate            = {2015.06.10}
}

@Book{cohn2009,
  Title                    = {Succeeding with Agile: Software Development Using Scrum},
  Author                   = {Cohn, M.},
  Publisher                = {Pearson Education},
  Year                     = {2009},

  __markedentry            = {[Andrei:6]},
  ISBN                     = {9780321660565},
  Owner                    = {Andrei},
  Timestamp                = {2015.06.16},
  Url                      = {https://books.google.com.br/books?id=8IglA6i\_JwAC}
}

@InProceedings{Deissenboeck2009,
  Title                    = {Software quality models: Purposes, usage scenarios and requirements},
  Author                   = {Deissenboeck, F. and Juergens, E. and Lochmann, K. and Wagner, S.},
  Booktitle                = {Software Quality, 2009. WOSQ '09. ICSE Workshop on},
  Year                     = {2009},
  Month                    = {May},
  Pages                    = {9-14},

  Abstract                 = {Software quality models are a well-accepted means to support quality management of software systems. Over the last 30 years, a multitude of quality models have been proposed and applied with varying degrees of success. Despite successes and standardisation efforts, quality models are still being criticised, as their application in practice exhibits various problems. To some extent, this criticism is caused by an unclear definition of what quality models are and which purposes they serve. Beyond this, there is a lack of explicitly stated requirements for quality models with respect to their intended mode of application. To remedy this, this paper describes purposes and usage scenarios of quality models and, based on the literature and experiences from the authors, collects critique of existing models. From this, general requirements for quality models are derived. The requirements can be used to support the evaluation of existing quality models for a given context or to guide further quality model development.},
  Doi                      = {10.1109/WOSQ.2009.5071551},
  Keywords                 = {software development management;software quality;quality management;quality model development;software quality model;Application software;Context modeling;ISO standards;Maintenance;Predictive models;Quality management;Software quality;Software systems;Stochastic processes;Terminology},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.18}
}

@Article{Dings2012,
  Title                    = {{A decade of agile methodologies: Towards explaining agile software development}},
  Author                   = {Dings\o yr, Torgeir and Nerur, Sridhar and Balijepally, VenuGopal and Moe, Nils Brede},
  Journal                  = {Journal of Systems and Software},
  Year                     = {2012},

  Month                    = jun,
  Number                   = {6},
  Pages                    = {1213--1221},
  Volume                   = {85},

  Abstract                 = {Ever since the agile manifesto was created in 2001, the research community has devoted a great deal of attention to agile software development. This article examines publications and citations to illustrate how the research on agile has progressed in the 10 years following the articulation of the manifesto. Specifically, we delineate the conceptual structure underlying agile scholarship by performing an analysis of authors who have made notable contributions to the field. Further, we summarize prior research and introduce contributions in this special issue on agile software development. We conclude by discussing directions for future research and urging agile researchers to embrace a theory-based approach in their scholarship.},
  Doi                      = {10.1016/j.jss.2012.02.033},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Dings\o yr et al/Journal of Systems and Software/Dings\o yr et al. - 2012 - A decade of agile methodologies Towards explaining agile software development.pdf:pdf},
  ISSN                     = {01641212},
  Keywords                 = {Agile software development,Crystal method,Feature-driven development,Information systems,Lean software development,Scrum,Software engineering,Theory,agile,eXtreme programming, XP,quality,software development},
  Mendeley-tags            = {agile,quality,software development},
  Url                      = {http://www.sciencedirect.com/science/article/pii/S0164121212000532}
}

@Article{Dromey1995,
  Title                    = {A model for software product quality},
  Author                   = {Dromey, R.G.},
  Journal                  = {Software Engineering, IEEE Transactions on},
  Year                     = {1995},

  Month                    = {Feb},
  Number                   = {2},
  Pages                    = {146-162},
  Volume                   = {21},

  Abstract                 = {A model for software product quality is defined, it has been formulated by associating a set of quality-carrying properties with each of the structural forms that are used to define the statements and statement components of a programming language. These quality-carrying properties are in turn linked to the high-level quality attributes of the International Standard for Software Product Evaluation ISO-9126. The model supports building quality into software, definition of language-specific coding standards, systematically classifying quality defects, and the development of automated code auditors for detecting defects in software},
  Doi                      = {10.1109/32.345830},
  ISSN                     = {0098-5589},
  Keywords                 = {ISO standards;program debugging;software quality;software standards;software tools;ISO-9126;International Standard for Software Product Evaluation;automated code auditors;high-level quality attributes;language-specific coding standards;programming language;quality defects;quality-carrying properties;software defect detection;software product quality;structural forms;Australia;Buildings;Code standards;Computer languages;Knowledge management;Refining;Software maintenance;Software quality;Software standards;Standards development},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.26}
}

@Misc{fowler2012,
  Title                    = {Test Pyramid},

  Author                   = {Martin Fowler},
  Month                    = {May},
  Year                     = {2012},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.16},
  Url                      = {http://martinfowler.com/bliki/TestPyramid.html},
  Urlaccessdate            = {2015.06.14}
}

@Misc{fowler2011,
  Title                    = {Tradable Quality Hypothesis},

  Author                   = {Martin Fowler},
  Year                     = {2011},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.07},
  Url                      = {http://martinfowler.com/bliki/TradableQualityHypothesis.html},
  Urlaccessdate            = {07.06.2015}
}

@Misc{fowler2003,
  Title                    = {Technical Debt},

  Author                   = {Martin Fowler},
  Month                    = {October},
  Year                     = {2003},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.09},
  Url                      = {http://martinfowler.com/bliki/TechnicalDebt.html},
  Urlaccessdate            = {2015.06.07}
}

@Book{galen2015,
  Title                    = {Three Pillars of Agile Quality \& Testing: Achieving Balanced Results in your Journey Towards Agile Quality},
  Author                   = {Robert Galen},
  Publisher                = {RGCG},
  Year                     = {2015},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.05}
}

@Misc{galen2014,
  Title                    = {Read my Lips - Agile isn't Fast!},

  Author                   = {Robert Galen},
  Month                    = {May},
  Year                     = {2014},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.09},
  Url                      = {http://www.velocitypartners.net/blog/2014/05/06/read-my-lips-agile-isnt-fast/},
  Urlaccessdate            = {07.06.2015}
}

@Article{GARVIN1987,
  Title                    = {Competing on the Eight Dimensions of Quality},
  Author                   = {Garvin, D.},
  Journal                  = {Harvard Business Review},
  Year                     = {1987},

  Month                    = {November},
  Pages                    = {101-109},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.12},
  Url                      = {https://hbr.org/1987/11/competing-on-the-eight-dimensions-of-quality}
}

@Book{crispin2014,
  Title                    = {More Agile Testing: Learning Journeys for the Whole Team},
  Author                   = {Janet Gregory and Lisa Crispin},
  Publisher                = {Addison-Wesley Pro},
  Year                     = {2014},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.05}
}

@Book{crispin2009,
  Title                    = {Agile Testing: A Practical Guide for Testers and Agile Teams},
  Author                   = {Janet Gregory and Lisa Crispin},
  Publisher                = {Addison-Wesley Professional},
  Year                     = {2009},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.05}
}

@Book{HIRAMA2011,
  Title                    = {{Engenharia De Software: Qualidade e Produtividade com Tecnologia}},
  Author                   = {Hirama, Kechi},
  Publisher                = {Elsevier},
  Year                     = {2011}
}

@InProceedings{Huo:2004:SQA:1025117.1025549,
  Title                    = {Software Quality and Agile Methods},
  Author                   = {Huo, Ming and Verner, June and Zhu, Liming and Babar, Muhammad Ali},
  Booktitle                = {Proceedings of the 28th Annual International Computer Software and Applications Conference - Volume 01},
  Year                     = {2004},

  Address                  = {Washington, DC, USA},
  Pages                    = {520-525},
  Publisher                = {IEEE Computer Society},
  Series                   = {COMPSAC '04},

  Acmid                    = {1025549},
  ISBN                     = {0-7695-2209-2-1},
  Numpages                 = {6},
  Owner                    = {Andrei},
  Timestamp                = {2015.06.05},
  Url                      = {http://dl.acm.org/citation.cfm?id=1025117.1025549}
}

@Article{Huo2004,
  Title                    = {Software quality and agile methods},
  Author                   = {Huo, Ming and Verner, J and Zhu, Liming and Babar, M a},
  Journal                  = {Computer Software and Applications Conference, 2004. COMPSAC 2004. Proceedings of the 28th Annual International},
  Year                     = {2004},
  Pages                    = {520--525 vol.1},

  Abstract                 = {Agile methods may produce software faster but we also need to know how they meet our quality requirements. In this paper we compare the waterfall model with agile processes to show how agile methods achieve software quality under time pressure and in an unstable requirements environment, i.e. we analyze agile software quality assurance. We present a detailed waterfall model showing its software quality support processes. We then show the quality practices that agile methods have integrated into their processes. This allows us to answer the question "can agile methods ensure quality even though they develop software faster and can handle unstable requirements?".},
  Doi                      = {10.1109/CMPSAC.2004.1342889},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Huo et al/Computer Software and Applications Conference, 2004. COMPSAC 2004. Proceedings of the 28th Annual International/Huo et al. - 2004 - Software quality and agile methods.pdf:pdf},
  ISBN                     = {0-7695-2209-2},
  ISSN                     = {0730-3157},
  Keywords                 = {Application software,Australia,Collaboration,Computer applications,Continuous improvement,Programming,Quality assurance,Software engineering,Software quality,agile methods,agile software quality assurance,software quality support processes,unstable requirements environment,waterfall model}
}

@Article{IEEE1990,
  Title                    = {{IEEE Standard Glossary of Software Engineering Terminology}},
  Author                   = {IEEE},
  Journal                  = {IEEE Std 610.12-1990},
  Year                     = {1990},
  Number                   = {1},
  Pages                    = {1--84},
  Volume                   = {12-1990},

  Abstract                 = {Describes the IEEE Std 610.12-1990, IEEE standard glossary of software engineering terminology, which identifies terms currently in use in the field of software engineering. Standard definitions for those terms are established.},
  Doi                      = {10.1109/IEEESTD.1990.101064},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/IEEE/IEEE Std 610.12-1990/IEEE - 1990 - IEEE Standard Glossary of Software Engineering Terminology.pdf:pdf},
  ISBN                     = {155937067X},
  Keywords                 = {definitions,dictionary,glossary,software engineering,terminology},
  Url                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=159342}
}

@Article{IEEEvocabulary2010,
  Title                    = {Systems and software engineering -- Vocabulary},
  Author                   = {ISO/IEC/IEEE},
  Journal                  = {ISO/IEC/IEEE 24765:2010(E)},
  Year                     = {2010},

  Month                    = {Dec},
  Pages                    = {1-418},
  Volume                   = {2010},

  Abstract                 = {ISO/IEC/IEEE 24765:2010 provides a common vocabulary applicable to all systems and software engineering work. It was prepared to collect and standardize terminology. ISO/IEC/IEEE 24765:2010 is intended to serve as a useful reference for those in the information technology field, and to encourage the use of systems and software engineering standards prepared by ISO and liaison organizations IEEE Computer Society and Project Management Institute. ISO/IEC/IEEE 24765:2010 includes references to the active source standards for each definition so that the use of the term can be further explored.},
  Doi                      = {10.1109/IEEESTD.2010.5733835},
  Keywords                 = {IEEE standards;ISO standards;software engineering;IEEE Computer Society;IEEE Standard Glossary of Software Engineering Terminology;IEEE Std 610.12-1990;International Standard;Project Management Institute;information technology field;systems engineering;Dictionaries;IEC standards;IEEE standards;ISO standards;Software engineering;computer;dictionary;information technology;software engineering;systems engineering;terminology;vocabulary},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.15},
  Url                      = {http://ieeexplore.ieee.org/servlet/opac?punumber=5733833}
}

@InProceedings{Jinzenji2012,
  Title                    = {{Metric-Based Quality Evaluations for Iterative Software Development Approaches Like Agile}},
  Author                   = {Jinzenji, Kumi and Hoshino, Takashi and Williams, Laurie and Takahashi, Kenji},
  Booktitle                = {2012 IEEE 23rd International Symposium on Software Reliability Engineering Workshops},
  Year                     = {2012},
  Month                    = nov,
  Pages                    = {54--63},
  Publisher                = {IEEE},

  Doi                      = {10.1109/ISSREW.2012.40},
  ISBN                     = {978-1-4673-5048-8},
  Keywords                 = {Agile,Iterative software development,Quality,Reliability,agile,quality,software development},
  Mendeley-tags            = {agile,quality,software development},
  Url                      = {http://dl.acm.org/citation.cfm?id=2473498.2474030}
}

@InProceedings{Klas2009,
  Title                    = {CQML Scheme: A Classification Scheme for Comprehensive Quality Model Landscapes},
  Author                   = {Klas, M. and Heidrich, J. and Munch, J. and Trendowicz, A.},
  Booktitle                = {Software Engineering and Advanced Applications, 2009. SEAA '09. 35th Euromicro Conference on},
  Year                     = {2009},
  Month                    = {Aug},
  Pages                    = {243-250},

  Abstract                 = {Managing quality during the development, operation, and maintenance of software(-intensive) systems and services is a challenging task. Although many organizations need to define, control, measure, and improve various quality aspects of their development artifacts and processes, nearly no guidance is available on how to select, adapt, define, combine, use, and evolve quality models. Catalogs of models as well as selection and tailoring processes are widely missing. A first step towards better support for selecting and adapting quality models can be seen in a classification of existing quality models, especially with respect to their suitability for different purposes and contexts. This article presents so-called comprehensive quality model landscapes (CQMLs), which provide such a classification scheme and help to get an overview of existing models and their relationships. The article focuses on the description and justification of essential concepts needed to define quality models and landscapes. In addition, the article describes typical usage scenarios, illustrates the concept with examples, and sketches open questions and future work.},
  Doi                      = {10.1109/SEAA.2009.88},
  ISSN                     = {1089-6503},
  Keywords                 = {software maintenance;software management;software quality;CQML scheme;classification scheme;comprehensive quality model landscape;quality assurance;quality improvement;software maintenance;software quality management;software-intensive system;Application software;Catalogs;Context modeling;Decision making;Measurement standards;Project management;Quality assurance;Quality management;Software engineering;Software maintenance;Software quality management;classification sheme;quality assurance;quality improvement},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.18}
}

@Misc{spotify2014,
  Title                    = {Spotify Engineering Culture (Part 1)},

  Author                   = {Henrik Kniberg},
  HowPublished             = {Spotify's Engineering and Technology Blog},
  Month                    = {March},
  Year                     = {2014},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.10},
  Url                      = {https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/},
  Urlaccessdate            = {2015.06.06}
}

@Article{malik2014,
  Title                    = {An Efficient Objective Quality Model for Agile Application Development},
  Author                   = {M. Usman Malik and Haseeb Nasir and Ali Javed},
  Journal                  = {International Journal of Computer Applications},
  Year                     = {2014},

  Month                    = {January},
  Number                   = {8},
  Pages                    = {19-24},
  Volume                   = {85},

  Url                      = {http://www.ijcaonline.org/archives/volume85/number8/14861-3234}
}

@Book{general1977factors,
  Title                    = {Factors in Software Quality},
  Author                   = {McCall, J.A. and General Electric Company and Richards, P.K. and Walters, G.F. and Rome Air Development Center and United States. Air Force. Systems Command. Electronic Systems Division},
  Publisher                = {Rome Air Development Center, Air Force Systems Command},
  Year                     = {1977},
  Series                   = {RADC-TR-77-369},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.12}
}

@Book{Naik2011,
  Title                    = {Software Testing and Quality Assurance: Theory and Practice},
  Author                   = {Naik, K. and Tripathy, P.},
  Publisher                = {Wiley},
  Year                     = {2011},

  ISBN                     = {9781118211632},
  Owner                    = {Andrei},
  Timestamp                = {2015.04.28}
}

@Misc{nogueira2013,
  Title                    = {Introduç{\~a}o do Quadrante de Teste {\'A}gil},

  Author                   = {Elias Nogueira},
  Month                    = {Novembro},
  Year                     = {2013},

  Owner                    = {Andrei},
  Timestamp                = {2015.06.08},
  Url                      = {http://blog.adaptworks.com.br/2013/11/introducao-do-quadrante-de-teste-agil/},
  Urlaccessdate            = {08.06.2015}
}

@Book{PFLEEGER2010,
  Title                    = {{Software Engineering: Theory and Practice}},
  Author                   = {Pfleeger, Shari Lawrence and Atlee, Joanne M.},
  Publisher                = {Pearson},
  Year                     = {2010}
}

@Book{PRESSMAN2010,
  Title                    = {{Software Engineering: A practicioner's approach}},
  Author                   = {Pressman, Roger S.},
  Publisher                = {McGraw-Hill},
  Year                     = {2010}
}

@Book{rasmusson2010,
  Title                    = {The Agile Samurai: How Agile Masters Deliver Great Software},
  Author                   = {Rasmusson, J.},
  Publisher                = {Pragmatic Bookshelf},
  Year                     = {2010},
  Series                   = {Pragmatic Bookshelf Series},

  __markedentry            = {[Andrei:]},
  ISBN                     = {9781934356586},
  Lccn                     = {2012419297},
  Owner                    = {Andrei},
  Timestamp                = {2015.06.09}
}

@Article{Silva2014b,
  Title                    = {{A Reference Model for Agile Quality Assurance: Combining Agile Methodologies and Maturity Models}},
  Author                   = {Silva, Fernando Selleri and Soares, Felipe Santana Furtado and Peres, Angela Lima and Azevedo, Ivanildo Monteiro De and Pinto, Pietro Pereira and Meira, Silvio Romero De Lemos},
  Journal                  = {2014 9th International Conference on the Quality of Information and Communications Technology},
  Year                     = {2014},
  Pages                    = {139--144},

  Doi                      = {10.1109/QUATIC.2014.25},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Silva et al/2014 9th International Conference on the Quality of Information and Communications Technology/Silva et al. - 2014 - A Reference Model for Agile Quality Assurance Combining Agile Methodologies and.pdf:pdf},
  ISBN                     = {978-1-4799-6133-7},
  Keywords                 = {agile methodologies,maturity,quality assurance},
  Url                      = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6984105}
}

@Book{SOMMERVILLE2011,
  Title                    = {{Software engineering}},
  Author                   = {Sommerville, Ian},
  Publisher                = {Pearson},
  Year                     = {2011}
}

@Book{SURYN2014,
  Title                    = {{Software Quality Engineering: A practicioner's approach}},
  Author                   = {Suryn, Witold},
  Publisher                = {Wiley},
  Year                     = {2014}
}

@Book{tsui2013,
  Title                    = {Essentials of Software Engineering},
  Author                   = {Tsui, F.F. and Karam, O. and Bernal, B.},
  Publisher                = {Jones \& Bartlett Learning},
  Year                     = {2013},
  ISBN                     = {9781449691998},
  Lccn                     = {2012029913},
  Owner                    = {Andrei},
  Timestamp                = {2015.06.08}
}

@Article{Turk2014,
  Title                    = {{Limitations of Agile Software Processes}},
  Author                   = {Turk, Dan and France, Robert and Rumpe, Bernhard},
  Year                     = {2014},

  Month                    = sep,
  Pages                    = {4},

  Abstract                 = {Software developers and project managers are struggling to assess the appropriateness of agile processes to their development environments. This paper identifies limitations that apply to many of the published agile processes in terms of the types of projects in which their application may be problematic.},
  Archiveprefix            = {arXiv},
  Arxivid                  = {1409.6600},
  Eprint                   = {1409.6600},
  File                     = {:C$\backslash$:/Users/Andrei/Documents/Mendeley Desktop/Turk, France, Rumpe/Unknown/Turk, France, Rumpe - 2014 - Limitations of Agile Software Processes.pdf:pdf},
  Keywords                 = {agile,quality},
  Mendeley-tags            = {agile,quality},
  Url                      = {http://arxiv.org/abs/1409.6600}
}

@Book{VANCE2014,
  Title                    = {{Quality Code: Software Testing Principles, Practices, and Patterns}},
  Author                   = {Vance, Stephen},
  Publisher                = {Addison-Wesley},
  Year                     = {2014}
}

@Book{wagner2013,
  Title                    = {Software Product Quality Control},
  Author                   = {Wagner, S.},
  Publisher                = {Springer},
  Year                     = {2013},
  Series                   = {SpringerLink : B{\"u}cher},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.16}
}

@TechReport{wagner2012,
  Title                    = {Software quality in practice. Survey results. Technical Report TUM-I128},
  Author                   = {Wagner, S. and Lochmann, K. and Winter, Sebastian and Goeb, Andreas and Klas, M. and Nunnenmacher, Sabine},
  Institution              = {Technische Universit�t M�nchen},
  Year                     = {2012},

  Owner                    = {Andrei},
  Timestamp                = {2015.04.26}
}

@Book{WAZLAWICK2013,
  Title                    = {{Engenharia de Software: Conceitos e Pr\'{a}ticas}},
  Author                   = {Wazlawick, Raul Sidnei},
  Publisher                = {Elsevier},
  Year                     = {2013}
}

